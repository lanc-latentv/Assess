
1)

SELECT 
    MACHINE_ID, COST
FROM
    L1_maintenance_records
WHERE
    MONTH(MAINTENANCE_DATE) = '3'
        AND COST > (SELECT 
            AVG(COST)
        FROM
            L1_maintenance_records
        WHERE
            MONTH(MAINTENANCE_DATE) = '3');


2)

SELECT 
    COUNT(MAINTENANCE_TYPE) AS COUNTS, MAINTENANCE_TYPE
FROM
    L1_maintenance_records
WHERE
    MONTH(MAINTENANCE_DATE) = '3'
        AND YEAR(MAINTENANCE_DATE) = '2024'
GROUP BY MAINTENANCE_TYPE
ORDER BY COUNTS DESC;



3)
SELECT TECHNICIAN_NAME,MAX(SELECT COUNT(*) FROM L1_maintenance_records  ) FROM L1_maintenance_records;




LAB-2

4)

SELECT 
    AVG(incident_count_pre_update),
    AVG(incident_count_post_update),PRODUCT_ID
FROM
    L2_UPDATES GROUP BY PRODUCT_ID;

5)



6)




LAB-3

7)
SELECT 
    P.PATIENT_NAME,
    F.LOCATION,
    F.FACILITY_NAME,
    V.REASON_FOR_VISIT,
    T.OUTCOME,COUNT(FACILITY_NAME)
FROM
    L3_VISITS V
        JOIN
    L3_PATIENTS P USING (PATIENT_ID)
        JOIN
    L3_TREATMENTS T USING (VISIT_ID)
        JOIN
    L3_FACILITIES F USING (FACILITY_ID)
    GROUP BY     
    P.PATIENT_NAME,
    F.LOCATION,
    F.FACILITY_NAME,
    V.REASON_FOR_VISIT,
    T.OUTCOME 
    HAVING COUNT(F.FACILITY_NAME)>1;



8)
SELECT 
    F.FACILITY_NAME, VISIT_ID , V.REASON_FOR_VISIT
FROM
    L3_VISITS V
        JOIN
    L3_FACILITIES F
    WHERE VISIT_ID
    IN (SELECT VISIT_ID FROM L3_VISITS WHERE REASON_FOR_VISIT = 'EMERGENCY');




9)




LAB-4

10)
SELECT 
    PRODUCT_NAME,
    CATEGORY,
    (SELECT 
            QUANTITY
        FROM
            L4_SALES
        ORDER BY QUANTITY DESC
        LIMIT 1) AS QUANTITYSOLD
FROM
    L4_PRODUCTS;


11)
CREATE VIEW SALESSTORE AS
    SELECT 
        SUM(QUANTITY) AS TOTAL_SALES,REGION
    FROM
        L4_SALES
            JOIN
        L4_STORES USING (STORE_ID)
        GROUP BY REGION;

SELECT * FROM SALESSTORE;




12)
SELECT 
    P.PRODUCT_NAME,SS.REGION
FROM
    L4_SALES S
        JOIN
    L4_PRODUCTS P USING (PRODUCT_ID)
        JOIN
    L4_STORES SS USING (STORE_ID)
    WHERE REGION NOT NULL;




